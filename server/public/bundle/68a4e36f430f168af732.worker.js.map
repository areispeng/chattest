{"version":3,"sources":["webpack:///webpack/bootstrap 68a4e36f430f168af732","webpack:///./app/util/recorderWorker.js"],"names":["recLength","recBuffersL","recBuffersR","sampleRate","console","log","self","onmessage","e","data","command","init","config","record","buffer","exportWAV","type","getBuffer","clear","inputBuffer","push","length","bufferL","mergeBuffers","bufferR","interleaved","interleave","dataview","encodeWAV","audioBlob","Blob","postMessage","buffers","recBuffers","result","Float32Array","offset","i","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","s","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","ArrayBuffer","DataView","setUint32","setUint16"],"mappings":"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","file":"68a4e36f430f168af732.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 68a4e36f430f168af732","var recLength = 0,\n  recBuffersL = [],\n  recBuffersR = [],\n  sampleRate;\n\nconsole.log('worker self: ',self);\n\nself.onmessage = function(e) {\n  switch(e.data.command){\n    case 'init':\n      init(e.data.config);\n      break;\n    case 'record':\n      record(e.data.buffer);\n      break;\n    case 'exportWAV':\n      exportWAV(e.data.type);\n      break;\n    case 'getBuffer':\n      getBuffer();\n      break;\n    case 'clear':\n      clear();\n      break;\n  }\n};\n\nfunction init(config){\n  sampleRate = config.sampleRate;\n}\n\nfunction record(inputBuffer){\n  recBuffersL.push(inputBuffer[0]);\n  recBuffersR.push(inputBuffer[1]);\n  recLength += inputBuffer[0].length;\n}\n\nfunction exportWAV(type){\n  var bufferL = mergeBuffers(recBuffersL, recLength);\n  var bufferR = mergeBuffers(recBuffersR, recLength);\n  var interleaved = interleave(bufferL, bufferR);\n  var dataview = encodeWAV(interleaved);\n  var audioBlob = new Blob([dataview], { type: type });\n\n  self.postMessage(audioBlob);\n}\n\nfunction getBuffer() {\n  var buffers = [];\n  buffers.push( mergeBuffers(recBuffersL, recLength) );\n  buffers.push( mergeBuffers(recBuffersR, recLength) );\n  self.postMessage(buffers);\n}\n\nfunction clear(){\n  recLength = 0;\n  recBuffersL = [];\n  recBuffersR = [];\n}\n\nfunction mergeBuffers(recBuffers, recLength){\n  var result = new Float32Array(recLength);\n  var offset = 0;\n  for (var i = 0; i < recBuffers.length; i++){\n    result.set(recBuffers[i], offset);\n    offset += recBuffers[i].length;\n  }\n  return result;\n}\n\nfunction interleave(inputL, inputR){\n  var length = inputL.length + inputR.length;\n  var result = new Float32Array(length);\n\n  var index = 0,\n    inputIndex = 0;\n\n  while (index < length){\n    result[index++] = inputL[inputIndex];\n    result[index++] = inputR[inputIndex];\n    inputIndex++;\n  }\n  return result;\n}\n\nfunction floatTo16BitPCM(output, offset, input){\n  for (var i = 0; i < input.length; i++, offset+=2){\n    var s = Math.max(-1, Math.min(1, input[i]));\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n  }\n}\n\nfunction writeString(view, offset, string){\n  for (var i = 0; i < string.length; i++){\n    view.setUint8(offset + i, string.charCodeAt(i));\n  }\n}\n\nfunction encodeWAV(samples){\n  var buffer = new ArrayBuffer(44 + samples.length * 2);\n  var view = new DataView(buffer);\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF');\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * 2, true);\n  /* RIFF type */\n  writeString(view, 8, 'WAVE');\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ');\n  /* format chunk length */\n  view.setUint32(16, 16, true);\n  /* sample format (raw) */\n  view.setUint16(20, 1, true);\n  /* channel count */\n  view.setUint16(22, 2, true);\n  /* sample rate */\n  view.setUint32(24, sampleRate, true);\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * 4, true);\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, 4, true);\n  /* bits per sample */\n  view.setUint16(34, 16, true);\n  /* data chunk identifier */\n  writeString(view, 36, 'data');\n  /* data chunk length */\n  view.setUint32(40, samples.length * 2, true);\n\n  floatTo16BitPCM(view, 44, samples);\n\n  return view;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/recorderWorker.js"],"sourceRoot":""}